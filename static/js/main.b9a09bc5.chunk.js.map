{"version":3,"sources":["redux/reducers/records-reducer.js","redux/reducers/user-reducer.js","redux/reducer.js","redux/sagas/get-user-saga.js","utils/RemoteConnector.js","redux/root-saga.js","redux/store.js","components/RecordsList/styles.js","components/RecordsList/RecordsList.jsx","components/Controls/styles.js","components/Controls/Controls.jsx","components/TestAsync/styles.js","components/TestAsync/TestAsync.jsx","components/Dialogs/AddRecordDialog/AddRecordDialog.jsx","components/Dialogs/RemoveRecordDialog/RemoveRecordDialog.jsx","styles.js","App.js","index.js"],"names":["recordsReducer","createSlice","name","initialState","records","id","reducers","addRecord","state","record","payload","currentRecords","removeRecord","action","filter","rec","setSelectedId","mainReducer","reducer","actions","getUserReducer","user","fetching","error","status","message","setUser","userData","data","fetchingRequest","isFetching","hasError","userReducer","getUser","getUserWatcher","remoteConnector","_url","_getRandomId","Math","ceil","random","a","fetch","method","headers","body","JSON","stringify","query","result","ok","json","Error","put","call","takeEvery","rootSaga","all","saga","sagaMiddleware","store","configureStore","devTools","process","middleware","getDefaultMiddleware","concat","run","useStyles","makeStyles","theme","list","width","listItem","borderRadius","animation","background","boxShadow","transition","breakpoints","down","transform","text","fontSize","fontFamily","fontWeight","lineHeight","letterSpacing","empty","paddingTop","paddingBottom","color","divider","backgroundColor","selected","fadeOut","opacity","RecordsList","memo","useState","selectedItem","setSelectedItem","useSelector","dispatch","useDispatch","classes","renderList","useCallback","List","className","map","item","idx","Fragment","ListItem","disableRipple","component","onClick","index","button","ListItemText","disableTypography","root","primary","length","Col","clsx","btnAdd","marginRight","Controls","openAddDialog","openRemoveDialog","Button","variant","disabled","Boolean","palette","success","main","dark","TestAsync","useSnackbar","enqueueSnackbar","closeSnackbar","key","style","useEffect","email","autoHideDuration","type","AddRecordDialog","open","onClose","setText","Dialog","fullWidth","DialogTitle","DialogContent","TextField","value","onChange","event","target","autoFocus","margin","label","DialogActions","trim","RemoveRecordDialog","wrapper","display","justifyContent","alignItems","minHeight","padding","marginTop","height","App","setOpenAddDialog","setOpenRemoveDialog","Container","Row","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9a09bc5.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  records: [],\n  id: 0,\n};\n\nconst recordsReducer = createSlice({\n  name: 'records',\n  initialState,\n  reducers: {\n    addRecord(state, { payload: record }) {\n      const { records: currentRecords } = state;\n      state.records = [...currentRecords, record];\n    },\n    removeRecord(state, action) {\n      state.records = state.records.filter((rec, id) => id !== state.id);\n    },\n    setSelectedId(state, { payload }) {\n      state.id = payload;\n    }\n  }\n});\n\nexport const {\n  reducer: mainReducer,\n  actions: {\n    addRecord,\n    removeRecord,\n    setSelectedId,\n  },\n} = recordsReducer;","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  user: {},\n  fetching: false,\n  error: {\n    status: false,\n    message: '',\n  }\n}\n\nconst getUserReducer = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUser(state, { payload: userData }) {\n      state.user = userData.data.user;\n    },\n    fetchingRequest(state, { payload: isFetching }) {\n      state.fetching = isFetching;\n    },\n    hasError(state, { payload: { status, message } }) {\n      state.error = { status, message };\n    }\n  }\n});\n\nexport const {\n  reducer: userReducer,\n  actions: {\n    setUser,\n    fetchingRequest,\n    hasError,\n  }\n} = getUserReducer;\n","import { mainReducer } from './reducers/records-reducer.js';\nimport { userReducer } from './reducers/user-reducer';\n\nexport const reducer = {\n  mainReducer,\n  userReducer,\n};\n","import {\n  takeEvery, put, call,\n} from 'redux-saga/effects';\n\nimport { RemoteConnector } from '../../utils/RemoteConnector';\nimport { setUser, fetchingRequest, hasError } from '../reducers/user-reducer';\n\nconst remoteConnector = new RemoteConnector();\n\nfunction* getUser() {\n  try {\n    yield put(hasError({ status: false, message: '' }));\n    yield put(fetchingRequest(true));\n    const userData = yield call(remoteConnector.getUser);\n    yield put(setUser(userData));\n  } catch ({ message }) {\n    yield put(hasError({ status: true, message: 'Не удалось получить данные' }));\n  } finally {\n    yield put(fetchingRequest(false));\n  }\n}\n\nexport function* getUserWatcher() {\n  yield takeEvery('user/getUser', getUser);\n}","export class RemoteConnector {\n  _url = 'https://graphqlzero.almansi.me/api';\n\n  _getRandomId = () => {\n    return Math.ceil(Math.random() * 10);\n  };\n\n  getUser = async () => {\n    const result = await fetch(this._url, {\n      method: 'POST',\n      headers: { 'content-type': 'application/json' },\n      body: JSON.stringify({\n        query: `{\n          user(id: ${this._getRandomId()}) {\n            id\n            name\n            email\n            address {\n              geo {\n                lat\n                lng\n              }\n            }\n          }\n        }`\n      }),\n    });\n\n    if (!result.ok) {\n      const error = await result.json();\n      throw new Error(error.error.message);\n    }\n\n    return await result.json();\n  };\n}\n","import { all, call } from 'redux-saga/effects';\nimport { getUserWatcher } from './sagas/get-user-saga';\n\nexport function* rootSaga() {\n  yield all([call(getUserWatcher)]);\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport sagaMiddleware from 'redux-saga';\n\nimport { reducer } from './reducer';\nimport { rootSaga } from './root-saga';\n\nconst saga = sagaMiddleware();\nexport const store = configureStore({\n  reducer,\n  devTools: process.env.NODE_ENV !== 'production',\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(saga),\n});\n\nsaga.run(rootSaga);\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(theme => ({\n  list: {\n    width: '100%',\n  },\n  listItem: {\n    borderRadius: 5,\n    animation: '$fade .5s',\n    background: 'linear-gradient(62deg, #8EC5FC 0%, #E0C3FC 100%)',\n    boxShadow: 'none',\n    transition: 'all .3s',\n    [theme.breakpoints.down(600)]: {\n      borderRadius: 0,\n    },\n    '&:hover': {\n      transform: 'scale(1.01)',\n      boxShadow: '0 0 10px rgba(0, 0, 155, .3)',\n    }\n  },\n  text: {\n    fontSize: '1.5rem',\n    fontFamily: 'Roboto, Helvetica, Arial, sans-serif',\n    fontWeight: 400,\n    lineHeight: 1.5,\n    letterSpacing: '0.00938em',\n  },\n  empty: {\n    paddingTop: 50,\n    paddingBottom: 50,\n    fontFamily: 'Roboto, Arial, sans-serif',\n    fontSize: 50,\n    color: '#bdbdbd',\n  },\n  divider: {\n    backgroundColor: '#000 !important',\n  },\n  selected: {\n    background: 'linear-gradient(62deg, #459ff9 0%, #c07eff 100%)',\n    transform: 'scale(1.01)',\n    boxShadow: '0 0 10px rgba(0, 0, 155, .3)',\n  },\n  fadeOut: {\n    animation: '$fade-out .3s',\n  },\n  '@keyframes fade': {\n    '0%': { opacity: 0, transform: 'scaleX(0)' },\n    '100%': { opacity: 1, transform: 'scaleX(1)' },\n  },\n  '@keyframes fade-out': {\n    '0%': { opacity: 1, transform: 'scaleX(1)' },\n    '100%': { opacity: 0, transform: 'scaleX(0)' },\n  }\n}));\n","import React, { useState, memo, useCallback } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport clsx from 'clsx';\n\nimport { List, ListItem, ListItemText } from '@material-ui/core';\nimport { Col } from 'react-bootstrap';\n\nimport { setSelectedId } from '../../redux/reducers/records-reducer';\nimport { useStyles } from './styles';\nimport './styles.css';\n\nexport const RecordsList = memo(() => {\n  const [selectedItem, setSelectedItem] = useState(0);\n  const { mainReducer: { records } } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const handleListItemClick = (index) => {\n    setSelectedItem(index);\n    dispatch(setSelectedId(index));\n  };\n\n  const renderList = useCallback(() => (\n    <List className={classes.list}>\n      {\n        records.map((item, idx) => (\n          <React.Fragment key={idx}>\n            <ListItem\n              disableRipple={true}\n              className={classes.listItem}\n              classes={{\n                divider: classes.divider,\n                selected: classes.selected,\n              }}\n              component=\"li\"\n              selected={selectedItem === idx}\n              onClick={() => handleListItemClick(idx)}\n              button\n              divider={true}\n            >\n              <ListItemText\n                disableTypography={true}\n                classes={{\n                  root: classes.text\n                }}\n                primary={item}\n              />\n            </ListItem>\n          </React.Fragment>\n        ))\n      }\n    </List>\n  ), [records, selectedItem]);\n\n  return records.length\n    ? (renderList())\n    :\n    <Col className={clsx('d-flex', ' justify-content-center', classes.empty)}>\n      Нет записей\n    </Col>\n});\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(theme => ({\n  btnAdd: {\n    marginRight: 20,\n  },\n}));\n","import React from 'react';\n\nimport { useSelector } from 'react-redux';\n\nimport { Button } from '@material-ui/core';\nimport { useStyles } from './styles';\n\nexport const Controls = ({ openAddDialog, openRemoveDialog }) => {\n  const classes = useStyles();\n  const { mainReducer: { records } } = useSelector(state => state);\n\n  return (\n    <>\n      <Button\n        className={classes.btnAdd}\n        onClick={openAddDialog}\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        Добавить\n      </Button>\n      <Button\n        onClick={openRemoveDialog}\n        variant=\"contained\"\n        color=\"secondary\"\n        disabled={!Boolean(records.length)}\n      >\n        Удалить\n      </Button>\n    </>\n  );\n};\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(theme => ({\n  button: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    '&:hover': {\n      backgroundColor: theme.palette.success.dark,\n    }\n  }\n}));\n","import React, { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button } from '@material-ui/core';\nimport { useSnackbar } from 'notistack';\n\nimport { useStyles } from './styles';\n\nexport const TestAsync = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { userReducer: { fetching, user, error: hasError } } = useSelector(state => state);\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const handleClick = () => {\n    dispatch({ type: 'user/getUser' });\n  };\n\n  const action = key => (\n    <Button\n      style={{ color: '#fff' }}\n      onClick={() => {\n        closeSnackbar(key)\n      }}\n    >\n      X\n    </Button>\n  );\n\n  useEffect(() => {\n    if (user.name && !hasError.status) {\n      const message = (\n        <div>\n          <div>имя: {user.name}</div>\n          <div>email: {user.email}</div>\n        </div>\n      );\n      enqueueSnackbar(message, { action });\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (hasError.status) {\n      enqueueSnackbar(\n        hasError.message,\n        {\n          variant: 'error',\n          autoHideDuration: 2000,\n          action,\n        }\n      );\n    }\n  }, [hasError]);\n\n  return (\n    <Button\n      className={classes.button}\n      variant=\"contained\"\n      onClick={handleClick}\n      disabled={fetching}\n    >\n      {fetching ? 'Загрузка...' : 'Тест GraphQL'}\n    </Button>\n  );\n};\n","import React, { useState } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport { addRecord } from '../../../redux/reducers/records-reducer';\n\nimport {\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from '@material-ui/core';\n\nexport const AddRecordDialog = ({ open, onClose }) => {\n  const [text, setText] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChangeText = (event) => {\n    setText(event.target.value);\n  };\n\n  const handleAddRecord = () => {\n    if (text.trim() === '') return;\n    dispatch(addRecord(text));\n    setText('');\n    onClose();\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      fullWidth\n    >\n      <DialogTitle>Добавить запись</DialogTitle>\n      <DialogContent>\n        <TextField\n          value={text}\n          onChange={handleChangeText}\n          autoFocus\n          margin=\"dense\"\n          id=\"name\"\n          label=\"Добавить\"\n          type=\"text\"\n          fullWidth\n        />\n        <DialogActions>\n          <Button onClick={onClose} color=\"primary\">\n            Отмена\n          </Button>\n          <Button onClick={handleAddRecord} color=\"primary\">\n            Оk\n          </Button>\n        </DialogActions>\n      </DialogContent>\n    </Dialog>\n  );\n};\n","import React from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport { removeRecord } from '../../../redux/reducers/records-reducer';\n\nimport {\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  Button,\n} from '@material-ui/core';\n\nexport const RemoveRecordDialog = ({ open, onClose }) => {\n  const dispatch = useDispatch();\n\n  const handleClickOk = () => {\n    dispatch(removeRecord());\n    onClose();\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      fullWidth\n    >\n      <DialogTitle>\n        Удалить запись?\n      </DialogTitle>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\">\n          Нет\n        </Button>\n        <Button onClick={handleClickOk} color=\"primary\">\n          Да\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(theme => ({\n  btnAdd: {\n    marginRight: 20,\n  },\n  wrapper: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '90%',\n    minHeight: '90%',\n    padding: '3rem',\n    boxShadow: '0 0 10px rgba(0, 0, 155, .3)',\n    margin: 'auto',\n    marginTop: '3rem',\n    [theme.breakpoints.down(600)]: {\n      width: 'auto',\n      height: '100%',\n      padding: 0,\n      margin: 0,\n    }\n  }\n}));","import React, { useState } from 'react';\n\nimport { Provider } from 'react-redux';\nimport { SnackbarProvider } from 'notistack';\nimport 'bootstrap/scss/bootstrap-grid.scss';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport { store } from './redux/store';\n\nimport { RecordsList } from './components/RecordsList';\nimport { Controls } from './components/Controls';\nimport { TestAsync } from './components/TestAsync';\nimport { AddRecordDialog } from './components/Dialogs/AddRecordDialog';\nimport { RemoveRecordDialog } from './components/Dialogs/RemoveRecordDialog';\nimport { useStyles } from './styles';\n\nexport const App = () => {\n  const classes = useStyles();\n  const [openAddDialog, setOpenAddDialog] = useState(false);\n  const [openRemoveDialog, setOpenRemoveDialog] = useState(false);\n\n  const handleOpenAddDialog = () => {\n    setOpenAddDialog(true);\n  };\n\n  const handleCloseAddDialog = () => {\n    setOpenAddDialog(false);\n  };\n\n  const handleOpenRemoveDialog = () => {\n    setOpenRemoveDialog(true);\n  };\n\n  const handleCloseRemoveDialog = () => {\n    setOpenRemoveDialog(false);\n  };\n\n  return (\n    <Provider store={store}>\n      <SnackbarProvider>\n        <div className={classes.wrapper}>\n          <Container className=\"d-flex flex-column justify-content-center\">\n            <Row>\n              <RecordsList/>\n            </Row>\n            <Row>\n              <Col className=\"d-flex justify-content-center mb-2\">\n                <Controls openAddDialog={handleOpenAddDialog} openRemoveDialog={handleOpenRemoveDialog}/>\n              </Col>\n            </Row>\n            <Row>\n              <Col className=\"d-flex justify-content-center\">\n                <TestAsync/>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n        <AddRecordDialog open={openAddDialog} onClose={handleCloseAddDialog}/>\n        <RemoveRecordDialog open={openRemoveDialog} onClose={handleCloseRemoveDialog}/>\n      </SnackbarProvider>\n    </Provider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}